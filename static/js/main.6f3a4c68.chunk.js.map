{"version":3,"sources":["components/columns.js","components/categoryFilter.js","components/searchResultTable.js","components/bankDetails.js","App.js","index.js"],"names":["COLUMNS","Header","accessor","CategoryFilter","column","filterValue","isChanged","setFilter","useState","value","setValue","onChange","useAsyncDebounce","undefined","placeholder","e","target","SearchResultTable","data","setSelectedRow","category","columns","useMemo","defaultColumn","Filter","history","useHistory","useTable","useFilters","usePagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","state","gotoPage","setPageSize","prepareRow","pageIndex","pageSize","map","headerGroup","headers","render","class","bordered","hover","responsive","style","tableLayout","getHeaderGroupProps","row","i","getRowProps","onClick","push","values","ifsc","handleRowClick","cells","cell","getCellProps","marginTop","AlignItems","length","marginRight","lineHeight","type","height","defaultValue","pageNumber","Number","width","backgroundColor","disabled","marginLeft","BankDetails","useParams","ifsc_code","padding","fontSize","textAlign","boxShadow","className","fontFamily","fontWeight","bank_name","bank_id","branch","address","App","setData","loading","setLoading","error","setError","city","setCity","setCategory","selectedRow","useEffect","fetchData","a","console","log","axios","get","toUpperCase","res","status","Error","message","paddingBottom","paddingTop","exact","path","to","id","marginBottom","title","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6f3a4c68.chunk.js","sourcesContent":["export const COLUMNS = [\r\n    {\r\n        Header: 'Bank Name',\r\n        accessor: 'bank_name'\r\n    },\r\n    {\r\n        Header: 'IFSC Code',\r\n        accessor: 'ifsc'\r\n    },\r\n    {\r\n        Header: 'Branch',\r\n        accessor: 'branch'\r\n    },\r\n    {\r\n        Header: 'Bank ID',\r\n        accessor: 'bank_id'\r\n    },\r\n    {\r\n        Header: 'Address',\r\n        accessor: 'address'\r\n    }\r\n]","import React, { useState } from 'react';\r\nimport { useAsyncDebounce } from 'react-table';\r\n\r\nexport const CategoryFilter = ({ column , isChanged}) => {\r\n    \r\n    const { filterValue, setFilter } = column;\r\n    const [ value, setValue ] = useState(filterValue);\r\n    \r\n    const onChange = useAsyncDebounce(value => {\r\n        setFilter(value || undefined )\r\n    }, 1000)\r\nconst clearAll =  () => {\r\n    if(value!=null)\r\n        setValue(\"\");\r\n}\r\n    return(\r\n        <span>\r\n            <input value={value || ''} \r\n                placeholder='Search'\r\n                onChange = {(e) => {\r\n                    onChange(undefined);\r\n                    \r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);  \r\n                    \r\n                }}         \r\n            />\r\n        </span>\r\n    )\r\n}","import React, { useMemo } from 'react';\r\nimport { useTable, usePagination, useFilters } from 'react-table';\r\nimport { COLUMNS } from './columns';\r\nimport { Table,Button } from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n//import './BankTable.css';\r\nimport { CategoryFilter } from './categoryFilter';\r\n\r\nexport const SearchResultTable = ({ data, setSelectedRow,category}) => {\r\n    const columns = useMemo(() => COLUMNS, []);\r\n    const defaultColumn = useMemo(() => {\r\n        return {\r\n            Filter: CategoryFilter\r\n\r\n        }\r\n    }, []);\r\n    \r\n\r\n    const history = useHistory();\r\n    const handleRowClick = (row) => {\r\n        history.push(`/bank_details/${row.values.ifsc}`);\r\n      } \r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        pageOptions,\r\n        state,\r\n        gotoPage,\r\n        setPageSize,\r\n        prepareRow\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n        defaultColumn\r\n    }, \r\n    useFilters,\r\n    usePagination)\r\n\r\n    const { pageIndex, pageSize } = state;\r\n    return(\r\n        <>\r\n        <div>\r\n            {headerGroups.map(headerGroup => (\r\n                    headerGroup.headers.map(column => (\r\n                        <th>\r\n                            \r\n                            <div>\r\n                                {column.render('Header')==category ? column.render('Filter') :null}\r\n                            </div>\r\n                        </th>\r\n                    ))\r\n                   \r\n                ))}\r\n        </div>\r\n        <div class=\"fixTableHead\">\r\n        <Table bordered hover responsive style={{width:'600px'},{tableLayout: 'fixed'}} {...getTableProps()}>\r\n            <thead>\r\n            {headerGroups.map(headerGroup => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                    <th>\r\n                        {column.render('Header')}\r\n                    </th>\r\n                ))}\r\n                </tr>\r\n            ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {page.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()} onClick={()=> {\r\n                            handleRowClick(row);\r\n                            setSelectedRow(row.values)}}>\r\n                            {row.cells.map(cell => {\r\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n        </div>\r\n        <div>\r\n            <div class=\"paginationDiv , text-center\" style={{marginTop:\"20px\"}}>\r\n                <span class=\"paginationItems\" style={{AlignItems:\"left\"}}>\r\n                    Page {' '}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong> {' '}\r\n                </span>\r\n                <span class=\"paginationItems\"  style={{ marginRight:\"10px\", lineHeight:\"28px\" }}>\r\n                    | Go to page: {' '}\r\n                    <input type='number' style={{ height:\"60px\" }} defaultValue={pageIndex + 1}\r\n                    onChange = { e => {\r\n                        const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                        gotoPage(pageNumber)\r\n                    }} \r\n                    style ={{width: '50px'}}/>\r\n                </span>\r\n                \r\n                \r\n                <Button style={{backgroundColor:\"#00d09c\", marginRight:\"10px\" }} onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Prev\r\n                </Button>\r\n                <Button style={{backgroundColor:\"#00d09c\" }}onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next\r\n                </Button>\r\n               \r\n                <select class=\"paginationItems\"  style={{marginLeft:\"20px\", height:\"35px\"}} value={pageSize} onChange={e=>{\r\n                    setPageSize(Number(e.target.value))\r\n                }}>\r\n                    {[10, 20, 50].map(pageSize => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            {pageSize} \r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n};","import { useParams } from \"react-router-dom\";\r\nimport { Card,Container,ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText , CardHeader} from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const BankDetails = ({ data }) => {\r\n    const { ifsc_code } = useParams();\r\n    return(\r\n        <Container  style={{\r\n           width: 1000, padding: 30, marginTop:60, fontSize:20, textAlign:\"left\", boxShadow:\"0 3px 10px rgb(0 0 0 / 0.2)\"\r\n        }}>\r\n            <CardHeader className=\"text-center\" style={{backgroundColor:\"#00d09c\", height:50,fontFamily:\"sans-serif\", fontSize:'25px', fontWeight:\"bold\"}}>{data.bank_name }</CardHeader>\r\n             <Card>\r\n                <ListGroup className=\"list-group-flush\">\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>Bank ID</ListGroupItemHeading> \r\n                    <ListGroupItemText>{data.bank_id}</ListGroupItemText>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>Branch</ListGroupItemHeading>\r\n                    <ListGroupItemText>{data.branch} </ListGroupItemText>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>IFSC</ListGroupItemHeading>\r\n                    <ListGroupItemText>{data.ifsc} </ListGroupItemText>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>Address</ListGroupItemHeading> \r\n                    <ListGroupItemText>{data.address}</ListGroupItemText>\r\n                </ListGroupItem>\r\n                </ListGroup>\r\n            </Card>\r\n        </Container>\r\n    )\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { SearchResultTable } from './components/searchResultTable';\nimport { Container } from 'reactstrap';\nimport {BankDetails} from './components/bankDetails';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [city, setCity] = useState('BHOPAL');\n  const [category, setCategory] = useState('Branch');\n  const [selectedRow, setSelectedRow] = useState({});\n\n\n  useEffect(()=>{\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n   console.log(loading);\n        const res = await axios.get(`https://vast-shore-74260.herokuapp.com/banks?city=${city.toUpperCase()}`);\n         if (res.status !== 200){\n           throw Error ('Could not fetch data');\n         }\n        setData(res.data);\n      \n        setError(null);\n        console.log(loading);\n        setLoading(false);\n        console.log(loading);\n      }\n      catch(err){\n        setLoading(false);\n        setError(err.message);\n      }\n    }\n    fetchData();\n  },[city]);\n \n \n\n  return (\n    <Container  style={{boxShadow:\"0 3px 10px rgb(0 0 0 / 0.2)\", paddingBottom:\"40px\", paddingTop:\"20px\", marginTop:\"40px\"}}>\n      <div className=\"content\">\n        <Switch>\n        <Route exact path=\"/\"\n          render={() => {\n              return (\n                <Redirect to=\"/all_banks\" /> \n              )\n          }\n        }/>\n          <Route path=\"/all_banks\">\n            <Container style={{marginTop: 35}}>\n              <h2><strong>All Banks</strong></h2>\n              { error && \n                    <div>{ error }</div>\n                }\n              { loading &&  <div id=\"cover-spin\"></div>\n                }\n                \n              { data && \n                <div style={{marginTop: 25}}>\n                  <select class=\"inputElement\" style={{marginRight:\"30px\", marginBottom:\"10px\"}} value={city} onChange={e=>{\n                        setCity(e.target.value);\n                        \n                    }}>\n                        {['Bhopal','Indore', 'Jaipur','Mumbai','Patna'].map(city => (\n                            <option key={city} value={city}>\n                                {city}\n                                \n                            </option>\n                        ))}\n                    </select>\n                    <select class=\"inputElement\" value={category} onChange={e=>{\n                        setCategory(e.target.value);\n                        \n                        \n                    }}>\n                        {['Bank Name', 'Branch', 'IFSC Code'].map(category => (\n                            <option key={category} value={category}>\n                                {category}\n                                \n                            </option>\n                        ))}\n                       \n                    </select>\n                    \n                    { console.log(data)}\n                  <SearchResultTable data={data} setSelectedRow={setSelectedRow}  category={category}   title=\"All Banks\"/>\n                </div>\n                } \n            </Container>\n          </Route>\n          <Route path=\"/bank_details/:ifsc_code\">\n              <BankDetails data={selectedRow}/> \n          </Route>\n          \n        </Switch>\n      </div>\n\n\n</Container>\n\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />,\n </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}